package de.codekeepers.jobdog.simulation;// Generated by Selenium IDE

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.net.URI;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import java.util.concurrent.ThreadLocalRandom;
import java.util.stream.Collectors;

public class PostJobSimulation {

    private static final Logger logger = LoggerFactory.getLogger(PostJobSimulation.class);

    public static void main(String[] args) {

        String homeDir = System.getProperty("user.home");
        System.setProperty("webdriver.chrome.driver", homeDir + "/bin/chromedriver");

        int count = 5;
        int errorRate = 5;
        int batchSize = 25;
        try {

            if (args.length >= 1) {
                count = Integer.valueOf(args[0]);
            }
            if (args.length >= 2) {
                errorRate = Integer.valueOf(args[1]);
            }
            if (args.length >= 3) {
                batchSize = Integer.valueOf(args[2]);
            }
            if (count == -1) {
                logger.info("Will simulate infinite random posts with {}% error rate.", errorRate);
            } else {
                logger.info("Will simulate {} random post(s) with {}% error rate.", count, errorRate);
            }
        } catch (Exception e) {
            logger.error("Cannot parse commandline.", e);
            System.exit(-1);
        }
        List<String> jobCorpus = null;
        try {

            URI uri = PostJobSimulation.class.getResource("jobs.txt").toURI();
            jobCorpus = Files.lines(Paths.get(uri)).collect(Collectors.toList());

        } catch (Exception e) {
            logger.error("Cannot read job corpus.", e);
            System.exit(-2);
        }

        boolean infinite = count == -1;
        do {
            WebDriver driver = null;
            boolean error = false;
            try {
                ChromeOptions options = new ChromeOptions();
                options.setHeadless(true);
                driver = new ChromeDriver(options);
                driver.get("http://localhost:8080/");
                driver.manage().window().setSize(new Dimension(1536, 960));

                postJob(driver, jobCorpus, infinite ? batchSize : count, errorRate);

            } catch (Exception e) {
                logger.error("Failed posting: {}", e.getMessage());
                error = true;
            } finally {
                if (driver != null) {
                    driver.quit();
                }
            }
            if (error) {
                try {
                    Thread.sleep(2000L);
                } catch (InterruptedException e) {
                    Thread.interrupted();
                }
            }
        } while (infinite);

        System.exit(0);
    }

    private static void postJob(WebDriver driver, List<String> jobCorpus, int count, int errorRate) {

        for (int i = 0; i < count; i++) {

            ThreadLocalRandom rand = ThreadLocalRandom.current();
            int pos = rand.nextInt(0, jobCorpus.size());
            String title = jobCorpus.get(pos);

            String tags = "jobs";
            if (rand.nextInt(errorRate) == 0) {
                tags += ",r&d";
            }

            playPostJob(driver, title, tags);
        }
    }

    private static void playPostJob(WebDriver driver, String title, String tags) {

        logger.info("Post job '{}'  with tags = '{}' ...", title, tags);

        driver.findElement(By.linkText("New Job")).click();
        driver.findElement(By.id("title")).click();
        driver.findElement(By.id("title")).sendKeys(title);
        driver.findElement(By.id("description")).click();
        driver.findElement(By.id("description")).sendKeys("We are hiring.");
        driver.findElement(By.id("tags")).click();


        driver.findElement(By.id("tags")).sendKeys(tags);
        driver.findElement(By.id("btnPostJob")).click();
        driver.findElement(By.linkText("Refresh")).click();
    }
}
